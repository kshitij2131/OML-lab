import numpy as np
from cvxopt import matrix, solvers


A = np.array([[1, 1, 1, 0, 0, 0, 0, 0, 0], [-1, -1, -1, 0, 0, 0, 0, 0, 0], [-1, 0, 0, 1, 1, 0, 0, 0, 0], 
              [1, 0, 0, -1, -1, 0, 0, 0, 0], [0, -1, 0, -1, 0, 1, 1, 0, 0], [0, 1, 0, 1, 0, -1, -1, 0, 0],
              [0, 0, 0, 0, -1, -1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, -1, 0], [0, 0, -1, 0, 0, 0, -1, 0, 1],
              [0, 0, 1, 0, 0, 0, 1, 0, -1], [0, 0, 0, 0, 0, 0, 0, -1, -1], [0, 0, 0, 0, 0, 0, 0, 1, 1],
              [-1, 0, 0, 0, 0, 0, 0, 0, 0], [0, -1, 0, 0, 0, 0, 0, 0, 0], [0, 0, -1, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, -1, 0, 0, 0, 0, 0], [0, 0, 0, 0, -1, 0, 0, 0, 0], [0, 0, 0, 0, 0, -1, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, -1, 0, 0], [0, 0, 0, 0, 0, 0, 0, -1, 0], [0, 0, 0, 0, 0, 0, 0, 0, -1]])
b = np.array([[1], [-1], [3], [-3], [0], [0], [0], [0], [0], [0], [-4], [4], [0], [0], [0], [0], [0], [0], [0], [0], [0]])
c = np.array([[2], [3], [3], [2], [4], [1], [2], [3], [1]])

soln = solvers.lp(matrix(c, tc='d'), matrix(A, tc='d'), matrix(b, tc='d'))

print(np.round_(soln['x'], decimals=5), soln['primal objective'])  
